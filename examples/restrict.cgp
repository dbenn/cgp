// Concept restriction operations.

concept Number > Real;

// Restriction by type.
c1 = concept `[Number: 12.2]`;
c2 = concept `[Real]`;
c1Orig = c1.copy();
could = c1.restrict(c2);
if could then
  println "1: Concept " + c1Orig + " restricted to: " + c1 + " using " + c2;
end

// Restriction by referent.
c1 = concept `[Number]`;
c2 = concept `[Number: 12.2]`;
c1Orig = c1.copy();
could = c1.restrict(c2);
if could then
  println "2: Concept " + c1Orig + " restricted to: " + c1 + " using " + c2;
end

// Restriction by type and referent.
c1 = concept `[Number]`;
c2 = concept `[Real: 12.2]`;
c1Orig = c1.copy();
could = c1.restrict(c2);
if could then
  println "3: Concept " + c1Orig + " restricted to: " + c1 + " using " + c2;
end

// Restriction by referent where original 
// concept has name designator.
c1 = concept `[Number:'*x']`;
c2 = concept `[Number: 12.2]`;
c1Orig = c1.copy();
could = c1.restrict(c2);
if could then
  println "4: Concept " + c1Orig + " restricted to: " + c1 + " using " + c2;
end

// Restriction by type and referent where 
// original concept has name designator.
c1 = concept `[Number:'*y']`;
c2 = concept `[Real: 12.2]`;
c1Orig = c1.copy();
could = c1.restrict(c2);
if could then
  println "5: Concept " + c1Orig + " restricted to: " + c1 + " using " + c2;
end

// Restriction by referent (descriptor) where original 
// concept has name designator.
c1 = concept `[Number:'*z']`;
c2 = concept `[Real:[Entity:*a][Numeric:*b'12.2'](value?a?b)]`;
c1Orig = c1.copy();
could = c1.restrict(c2);
if could then
  println "6: Concept " + c1Orig + " restricted to: " + c1 + " using " + c2;
end

println "Referent variable mappings: " + _KB.corefvars;
